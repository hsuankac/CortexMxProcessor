/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2022 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	// 1. Enable all configurable exceptions like usage fault, mem manage fault and bus fault
	uint32_t *pSHCRS = (uint32_t *) 0xE000ED24;
	*pSHCRS |= (1 << 16); // for mem manage
	*pSHCRS |= (1 << 17); // for bus fault
	*pSHCRS |= (1 << 18); // for usage fault

	// 3. Forces the processor to execute some undefined instructions

	// 4. Analyze the fault
    /* Loop forever */
	for(;;);
}

// 2. Implement the fault handler
void HardFault_Handler(void)
{

}

void MemManage_Handler(void)
{

}

void BusFault_Handler(void)
{

}

void UsageFault_Handler(void)
{

}

